pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- main --

-- init --
function _init()
	person = new_person('mike', 63, 63)
	person.action = 'random_action'
	person.nacts = {'random_move'}	
end


-- update --
function _update()
	act_person(person)
end


-- draw --
function _draw()
	cls()
	debug_person(person)
	spr(person.sp, person.x, person.y)
end








-->8
-- person --

-- create new person --
function new_person(
	name,x, y
) 
	return {
		name=name,
		x=x,
		y=y,
		target={
			timer=-1,
			x=x,
			y=y,
		},
		action='idle',
		nacts={}, --next_actions
		sp=1
	}
end


-- idle --
function idle(p)
	if p.target.timer == -1 then
		p.target.timer = flr(rnd(40))
	end
	
	p.target.timer -= 1

	if p.target.timer == 0 then
		p.target.timer = -1
		p.action = 'random_action'
	end
end


-- move person --
function move_person(p)
	if p.target.x == p.x
	and p.target.y == p.y then
		if is_empty(p.nacts)	then
			p.action = 'idle'
		else
			p.action =	pop_left(p.nacts)
		end
		
		p.sp = 1
		return
	end

	p.sp = ((p.sp) % 2) + 1

	if p.target.x != p.x then
		p.x += p.target.x > p.x and 1 or -1
	end
	
	if p.target.y != p.y then
		p.y += p.target.y > p.y and 1 or -1
	end
end


function select_random_action(p)	
	p.action = rnd({
		'idle',
		'move',
		'random_move',
	})
end

function select_random_move(p)
	p.target.x=flr(rnd(128+1))
	p.target.y=flr(rnd(128+1))
	p.action = 'move'
end


action = {
	idle=idle,
	move=move_person,
	random_action=select_random_action,
	random_move=select_random_move,
}	

-- act acording to action --
function act_person(p)
	action[p.action](p)
end



-- debuging functions --
function debug_person(p)
	print(p.name)
	print(p.action)
	print('x: '..p.x..' y: '..p.y)
	print(dump(p.target))
	print('next: '..dump(p.nacts))
	print(p.sp)
end
-->8
-- util --

function pop_left(t)
	local value = t[1]
	
	deli(t, 1)
	
	return value
end

function is_empty(t)
	return #t == 0
end

function dump(o)
   if type(o) == 'table' then
      local s = '{ '
      for k,v in pairs(o) do
         if type(k) ~= 'number' then k = '"'..k..'"' end
         s = s .. '['..k..'] = ' .. dump(v) .. ','
      end
      return s .. '} '
   else
      return tostring(o)
   end
end

__gfx__
000000000000000000000000000000000000000000000000bbbbbb3bbbbbbb3b0000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
00700700000ff000000ff000000000000000000000000000bbb3bbbbbb6677bb0000000000000000000000000000000000000000000000000000000000000000
00077000000cc000000cc000000000000000000000000000bb3bbbbbb66667bb0000000000000000000000000000000000000000000000000000000000000000
00077000000dd000000dd000000000000000000000000000bbbbbbbbbdd6666b0000000000000000000000000000000000000000000000000000000000000000
00700700000dd00000dd0d00000000000000000000000000bbbbbbbbbddddddb0000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000bbbbb3bbbbbbb3bb0000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000bbbbbb3bbbbbbb3b0000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000bb67bbbbbb4444bb0044440000000000000000000000000000333300000000000000000000000000
000000000000000000000000000000000000000000000000bbd6bbbbb449944b04499440000000000000000000000000033b3b30000000000000000000000000
000000000000000000000000000000000000000000000000b3bbbbbbb49ff94b049ff94000000000000000000000000003b3b330000000000000000000000000
000000000000000000000000000000000000000000000000bb3bb776b49ff94b049ff940000000000000000000000000033b3b30000000000000000000000000
000000000000000000000000000000000000000000000000bbbbb6ddb449944b0449944000000000000000000000000003b3b330000000000000000000000000
00000000000000000000000000000000000000000000000077bbbbbbbb4444bb004444000000000000000000000000003b3b3b33000000000000000000000000
0000000000000000000000000000000000000000000000006dbbb3bbbbbbb3bb0000000000000000000000000000000033b3b3b3000000000000000000000000
dddddddddd6666dddd6666dd0000000000000000000000000000000000000000000000000000000000000000000000333b3b3b33000000000000000000000000
dddddddddd6666dddd6666dd0000000000000000000000000000000000000000000000000000000000000000003333b3b3b3b3b3333330000000000000000000
66666666dd6666dddd6666660000000000000000000000000000000000000000000000000000000000000000033b3b3b3b3b3b3b3b3b33000000000000000000
66666666dd6666dddd666666000000000000000000000000000000000000000000000000000000000000000003b3b3b3b3b3b3b3b3b3b3300000000000000000
66666666dd6666dddd6666660000000000000000000000000000000000000000000000000000000000000000033b3b3b3b3b3b3b3b3b3b300000000000000000
66666666dd6666dddd666666000000000000000000000000000000000000000000000000000000000000000003b3b3b3b3b3b3b3b3b3b3300000000000000000
dddddddddd6666dddddddddd00000000000000000000000000000000000000000000000000000000000000000033333b3b3b3b333b3b3b300000000000000000
dddddddddd6666dddddddddd00000000000000000000000000000000000000000000000000000000000000000000003333b3b33333b3b3300000000000000000
